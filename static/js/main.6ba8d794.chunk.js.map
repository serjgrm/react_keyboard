{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyEvent","e","preventDefault","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,MAFT,EAaEC,eAAiB,SAACC,GAChBA,EAAEC,iBACF,EAAKC,SAAS,CAAEJ,IAAKE,EAAEF,OAf3B,uDAKE,WACEK,SAASC,iBAAiB,UAAWC,KAAKN,kBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,kBAVjD,oBAkBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIF,KAAKR,MAAMC,IAAZ,mCAC2DO,KAAKR,MAAMC,IADtE,KACG,kCAvBd,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6ba8d794.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    key: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyEvent);\n  }\n\n  handleKeyEvent = (e: KeyboardEvent) => {\n    e.preventDefault();\n    this.setState({ key: e.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!this.state.key\n            ? 'Nothing was pressed yet' : `The last pressed key is [${this.state.key}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}